// Generated by CoffeeScript 1.10.0

/* Search by key press
 */

(function() {
  var clavius_search, redraw_concepts, redraw_docs, wikidata_search;

  d3.select('#search input').on('keydown', function() {
    if (d3.event.keyCode === 13) {
      d3.select('#concepts').html('<div class="counter"><i class="fa fa-spinner fa-pulse fa-2x fa-fw"></i></div>');
      d3.select('#docs').html('<div class="counter"><i class="fa fa-spinner fa-pulse fa-2x fa-fw"></i></div>');
      wikidata_search(this.value);
      return clavius_search(this.value, false);
    }
  });


  /* Search by button click
   */

  d3.select('#search button').on('click', function() {
    var user_input;
    d3.select('#concepts').html('<div class="counter"><i class="fa fa-spinner fa-pulse fa-2x fa-fw"></i></div>');
    d3.select('#docs').html('<div class="counter"><i class="fa fa-spinner fa-pulse fa-2x fa-fw"></i></div>');
    user_input = d3.select('#search input').node().value;
    wikidata_search(user_input);
    return clavius_search(user_input, false);
  });

  wikidata_search = function(user_input) {
    return d3.json("api/wikidata.php?text=" + user_input, function(err_1, wd_data) {
      var index, query;
      query = JSON.stringify(wd_data.map(function(d) {
        return {
          uri: "http://www.wikidata.org/entity/" + d.id
        };
      }));
      index = {};
      wd_data.forEach(function(d) {
        return index[d.id] = d;
      });
      return d3.json("http://wafi.iit.cnr.it:33065/ClaviusWeb-1.0.3/ClaviusSearch/count").post(query, function(err_2, cs_data) {
        return redraw_concepts((cs_data.filter(function(d) {
          return d.count > 0;
        })).map(function(d) {
          index[d.uri.split('/').slice(-1)].count = d.count;
          return index[d.uri.split('/').slice(-1)];
        }));
      });
    });
  };

  clavius_search = function(input, conceptual) {
    var query;
    query = conceptual ? '{luceneQuery: "concept:\\"' + input + '\\""}' : JSON.stringify({
      "luceneQuery": input
    });
    return d3.json('http://wafi.iit.cnr.it:33065/ClaviusWeb-1.0.3/ClaviusSearch/search').post(query, function(err, results) {
      var result_docs, result_docs_index;
      result_docs = d3.nest().key(function(d) {
        return d.idDoc;
      }).entries(results);
      result_docs_index = {};
      result_docs.forEach(function(d) {
        return result_docs_index[parseInt(d.key)] = d;
      });
      return d3.json("api/get_docs_by_index_ids.php?index_ids=[" + (result_docs.map(function(d) {
        return d.key;
      }).join(',')) + "]", function(docs) {
        docs.forEach(function(d) {
          return result_docs_index[d.node.index_id].doc = d;
        });
        return redraw_docs(result_docs);
      });
    });
  };

  redraw_concepts = function(data) {
    var container, enter_results, resource, results;
    container = d3.select('#concepts');
    container.html('<div class="counter"></div>');
    d3.select('#concepts .counter').text(function(d) {
      return data.length + " " + (data.length === 1 ? 'Concept' : 'Concepts') + " found.";
    });
    results = d3.select('#concepts').selectAll('.concept').data(data, function(d) {
      return d.concepturi;
    });
    enter_results = results.enter().append('div').attr({
      "class": 'concept'
    }).on('click', function(d) {
      d3.select('#search input').node().value = '';
      return clavius_search(d.concepturi, true);
    });
    results.order();
    enter_results.append('div').attr({
      "class": 'icon'
    }).append('i').attr({
      "class": 'fa fa-circle-o',
      'aria-hidden': 'true'
    });
    resource = enter_results.append('div').attr({
      "class": 'resource'
    });
    resource.append('span').attr({
      "class": 'label'
    }).text(function(d) {
      return d.label;
    });
    resource.append('span').html(function(d) {
      return " (<a target='_blank' class='link' href='" + d.concepturi + "'>wd:" + d.id + "</a>)";
    });
    resource.append('div').attr({
      "class": 'description'
    }).text(function(d) {
      return d.description;
    });
    resource.append('div').attr({
      "class": 'count'
    }).text(function(d) {
      return d.count + " " + (d.count === 1 ? 'Occurrence' : 'Occurrences') + " found.";
    });
    return results.exit().remove();
  };

  redraw_docs = function(data) {
    var annotations, container, match, results, right_container;
    container = d3.select('#docs');
    container.html('<div class="counter"></div>');
    container.select('#docs .counter').text(function(d) {
      return data.length + " " + (data.length === 1 ? 'Document' : 'Documents') + " found.";
    });
    results = container.selectAll('.doc').data(data);
    results.enter().append('div').attr({
      "class": 'doc'
    });
    results.append('div').attr({
      "class": 'icon'
    }).append('i').attr({
      "class": 'fa fa-file-o',
      'aria-hidden': 'true'
    });
    right_container = results.append('div');
    right_container.append('div').attr({
      "class": 'label'
    }).append('a').attr({
      href: function(d) {
        return "http://wafi.iit.cnr.it/webvis/dev/tea_nitaku/#docs/" + d.doc.id;
      }
    }).text(function(d) {
      return d.doc.node.label;
    });
    match = right_container.append('div').attr({
      "class": 'annotations'
    });
    annotations = match.selectAll('.annotation').data(function(d) {
      return d.values;
    });
    annotations.enter().append('div').attr({
      "class": 'annotation'
    });
    return annotations.html(function(d) {
      if (d.resourceObject === '') {
        return "<div>..." + (d.leftContext.replace(/\n/g, '<br>')) + " <span class='matched'>" + (d.matched.replace(/\n/g, '<br>')) + "</span> " + (d.rightContext.replace(/\n/g, '<br>')) + "...</div>";
      } else {
        return "<div>..." + (d.leftContext.replace(/\n/g, '<br>')) + " <span class='matched'>" + (d.matched.replace(/\n/g, '<br>')) + "</span> " + (d.rightContext.replace(/\n/g, '<br>')) + "...</div><div class='wd_resource'><i class='fa fa-circle-o'></i> <a href='" + d.resourceObject + "' target='_blank'>wd:" + (d.resourceObject.split('/').slice(-1)) + "</a></div>";
      }
    });
  };

}).call(this);
